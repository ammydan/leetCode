1、DP问题
重叠子问题——>重构问题——>最优子结构——>状态转移方程
明确 base case -> 明确「状态」-> 明确「选择」 -> 定义 dp 数组/函数的含义
2、模板套路：
# 初始化 base case
dp[0][0][...] = base
# 进行状态转移
for 状态1 in 状态1的所有取值：
  for 状态2 in 状态2的所有取值：
      for ...
          dp[状态1][状态2][...] = 求最值(选择1，选择2...)

DP实行之前，我们往往需要进行暴力破解（即决策树）,这样从上往下看符合我们人类思考。

3、DP数组遍历的方向
1)遍历的过程中，所需的状态必须是已经计算出来的（如果初始化的值在头部则要从头开始；如果在尾部则要从尾部开始；如果在中间，则需要第一个循环作为终结点，第二个循环从起点开始）
2)遍历的重点必须是存储结果的那个位置（但是对于完全可以分类的问题，则不需要这一项）